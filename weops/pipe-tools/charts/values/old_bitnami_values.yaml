commonLabels:
  object: postgres

global:
  postgresql:
    auth:
      # Password for the "postgres" admin user (overrides auth.postgresPassword)
      postgresPassword: Weops123!

primary:
  nodeSelector:
    node-role: worker
  persistence:
    enabled: false
  resources:
    limits:
      cpu: 250m
      memory: 300Mi
  podSecurityContext:
    fsGroup: 0
  containerSecurityContext:
    runAsUser: 0
  initdb:
    scripts:
      old_auth.sql: |
        CREATE OR REPLACE FUNCTION __tmp_create_user() returns void as $$
          BEGIN
            IF NOT EXISTS (
                    SELECT                       -- SELECT list can stay empty for this
                    FROM   pg_catalog.pg_user
                    WHERE  usename = 'weops') THEN
              CREATE USER weops;
            END IF;
          END;
          $$ language plpgsql;

          SELECT __tmp_create_user();
          DROP FUNCTION __tmp_create_user();

          ALTER USER weops WITH PASSWORD 'Weops123!';
          ALTER USER weops SET SEARCH_PATH TO weops,pg_catalog;

          GRANT CONNECT ON DATABASE postgres TO weops;


readReplicas:
  name: secondary
  nodeSelector:
    node-role: worker
  persistence:
    enabled: false
  resources:
    limits:
      cpu: 250m
      memory: 300Mi
  podSecurityContext:
    fsGroup: 0
  containerSecurityContext:
    runAsUser: 0