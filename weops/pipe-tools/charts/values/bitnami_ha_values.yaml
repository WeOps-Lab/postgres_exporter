persistence:
  enabled: false

commonLabels:
  object: postgres

service:
  type: NodePort
  nodePorts:
    postgresql: "5432"

global:
  postgresql:
    password: Weops123!

postgresql:
  nodeSelector:
    node-role: worker
  sharedPreloadLibraries: "pgaudit, pg_stat_statements"
  resources:
    limits:
      cpu: 300m
      memory: 500Mi
  initdbScripts:
    auth.sql: |
      CREATE OR REPLACE FUNCTION __tmp_create_user() returns void as $$
      BEGIN
        IF NOT EXISTS (
                SELECT                       -- SELECT list can stay empty for this
                FROM   pg_catalog.pg_user
                WHERE  usename = 'weops') THEN
          CREATE USER weops;
        END IF;
      END;
      $$ language plpgsql;

      SELECT __tmp_create_user();
      DROP FUNCTION __tmp_create_user();

      ALTER USER weops WITH PASSWORD 'Weops123!';
      ALTER USER weops SET SEARCH_PATH TO weops,pg_catalog;

      GRANT CONNECT ON DATABASE postgres TO weops;

      GRANT pg_monitor TO weops;


pgpool:
  customUsersSecret: mypgpoolusers
  adminPassword: Weops123!
  initdbScripts:
    auth.sql: |
      CREATE OR REPLACE FUNCTION __tmp_create_user() returns void as $$
      BEGIN
        IF NOT EXISTS (
                SELECT                       -- SELECT list can stay empty for this
                FROM   pg_catalog.pg_user
                WHERE  usename = 'weops') THEN
          CREATE USER weops;
        END IF;
      END;
      $$ language plpgsql;

      SELECT __tmp_create_user();
      DROP FUNCTION __tmp_create_user();

      ALTER USER weops WITH PASSWORD 'Weops123!';
      ALTER USER weops SET SEARCH_PATH TO weops,pg_catalog;

      GRANT CONNECT ON DATABASE postgres TO weops;

      GRANT pg_monitor TO weops;